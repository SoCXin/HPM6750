name: sdk

# on:
#   push:
#     paths:
#       - 'sdk.yml'
on:
  push:
    branches:
      - master
    paths-ignore:
      - '**.md'

jobs:
  build:
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-latest] #, windows-latest
    runs-on: ${{ matrix.os }}
    steps:
      - name: Checkout SDK
        uses: actions/checkout@v2
        with:
          repository: SoCXin/hpm_sdk
          token: ${{ secrets.SOC_XIN_TOCKEN }}
          path: hpm_sdk

      - name: Install SDK
        run: |
          sudo apt install build-essential cmake ninja-build libc6-i386 libc6-i386-cross libstdc++6-i386-cross
          sudo apt install python3 python3-pip
          export HPM_SDK_BASE=./hpm_sdk
          pip3 install --user -r "$HPM_SDK_BASE/scripts/requirements.txt"

      - name: Checkout Toolchain
        uses: actions/checkout@v2
        with:
          repository: hpmicro/riscv-gnu-toolchain
          submodules: "recursive"
          token: ${{ secrets.SOC_XIN_TOCKEN }}
          path: riscv-gnu-toolchain

      - name: Install Toolchain
        working-directory: riscv-gnu-toolchain
        run: |
          sudo apt-get install autoconf automake autotools-dev curl python3 libmpc-dev libmpfr-dev libgmp-dev gawk build-essential bison flex texinfo gperf libtool patchutils bc zlib1g-dev libexpat-dev
          ./configure --prefix=/opt/riscv
          make linux
          export GNURISCV_TOOLCHAIN_PATH=.
          export HPM_SDK_TOOLCHAIN_VARIANT=

      - name: Build samples
        if: success()
        working-directory: hpm_sdk
        run: |
          cd samples/hello_world
          mkdir build
          cd build
          cmake -GNinja -DBOARD=hpm6750evk ..

      # - uses: actions/upload-artifact@v2
      #   if: success()
      #   with:
      #     name: build_project
      #     path: project/${{ matrix.items }}

